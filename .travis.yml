language: python
dist: xenial
arch:
  - arm64
before_script:
  - wget -q "https://github.com/conda-forge/miniforge/releases/download/4.8.2-1/Miniforge3-4.8.2-1-Linux-aarch64.sh" -O miniconda.sh;
  - chmod +x miniconda.sh;
  - ./miniconda.sh -u -b -p $HOME/miniconda3;
  - export PATH=$HOME/miniconda3/bin:$PATH;
  - conda config --set always_yes yes --set auto_update_conda false;
  - conda install pip conda;
  - conda update -n base conda;
  - conda info -a;
  - conda activate

python:
  - "3.8"

script:
  - conda create -n conda38 -q -y python=3.8 numpy pip gitpython pyyaml
  - source activate conda38
  - apt-get install -y libc6-dev
  - apt-get install -y gdb
  - conda install -q -y cffi jinja2 ipython ipykernel pygments pexpect scipy
  - conda install -q -y gcc_linux-64 gxx_linux-64
  - conda install -q -y -c numba/label/dev llvmlite
  - conda install -q -y sphinx  docutils sphinx_rtd_theme pygments numpydoc
  - pip install rstcheck typeguard
  - git clone https://github.com/numba/numba.git
  - cd numba
  - python setup.py build_ext -q --inplace --debug --werror --wall --verbose
  - python setup.py build_ext -q --inplace --debug --verbose
  - python -m pip install --no-deps -e .
  - python -m numba.tests.test_runtests
  - NUMBA_ENABLE_CUDASIM=1 python -m numba.runtests -b -v -g -m -- numba.tests
  - python -m numba.runtests -l
  - export PYTHONPATH=.
  - conda install -q -y coverage 
  - coverage erase
  - coverage run runtests.py -b -j "12,None,20" --exclude-tags='long_running' -m -- numba.tests
  - NUMBA_USE_TYPEGUARD=1 NUMBA_ENABLE_CUDASIM=1 PYTHONWARNINGS="ignore:::typeguard" python runtests.py -b -j "12,None,20" --exclude-tags='long_running' -m -- numba.tests
  - NUMBA_ENABLE_CUDASIM=1 python -m numba.runtests -b -j "12,None,20" --exclude-tags='long_running' -m -- numba.tests
